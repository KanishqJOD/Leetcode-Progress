```cpp
class Solution {
    // int rec(int index, int final,string &s,string &t,vector<vector<int>> &dp) {
    //     if(final < 0) {
    //         return 1;
    //     }
    //     if(index < 0) {
    //         return 0;
    //     }
    //     if(dp[index][final] != -1) {
    //         return dp[index][final];
    //     }
    //     if(s[index] == t[final]) {
    //         return dp[index][final] =  rec(index - 1,final - 1, s,t,dp) + rec(index-1,final,s,t,dp);
    //     }
    //     else {
    //         return dp[index][final] = rec(index - 1, final,s,t,dp);
    //     }
    // }
public:
    int numDistinct(string s, string t) {
        int n = s.length();
        int m = t.length();
        // string ans = "";
        vector<vector<double>> dp(n + 1,vector<double>(m + 1,0));
        for(int i = 0; i<=n;i++) {
           dp[i][0] = 1;
        } 
        for(int i = 1; i<=n;i++) {
            for(int j = 1; j <=m;j++) {
                if(s[i - 1] == t[j - 1]) {
             dp[i][j] =  dp[i-1][j-1] + dp[i-1][j];
        }
        else {
         dp[i][j] = dp[i-1][j];
        }
            }
        }
        return (int)dp[n][m];
    }
};
```
